// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Attachment /> render() should render 1`] = `
<div>
  <Formsy(DataField)
    innerRef={[Function]}
    name="data.eventAttachments.undefined.link"
    required={false}
    validationError=""
    validationErrors={Object {}}
    validations={null}
  />
  <Formsy(DataField)
    innerRef={[Function]}
    name="data.eventAttachments.undefined.size"
    required={false}
    validationError=""
    validationErrors={Object {}}
    validations={null}
  />
  <Formsy(DataField)
    innerRef={[Function]}
    name="data.eventAttachments.undefined.type"
    required={false}
    validationError=""
    validationErrors={Object {}}
    validations={null}
  />
  <Formsy(DataField)
    innerRef={[Function]}
    name="data.eventAttachments.undefined.name"
    required={false}
    validationError=""
    validationErrors={Object {}}
    validations={null}
  />
  <WithStyles(GridItem)>
    <WithStyles(GridContainer)
      alignItems="center"
      spacing={2}
      wrap="nowrap"
    >
      <WithStyles(GridItem)>
        <WithStyles(JTextClass)
          bold={true}
          gray={true}
          xs={true}
        >
          NaN
        </WithStyles(JTextClass)>
      </WithStyles(GridItem)>
      <WithStyles(GridItem)
        xs={true}
      >
        <WithStyles(GridContainer)
          direction="column"
          spacing={0}
        >
          <WithStyles(GridItem)>
            <WithStyles(GridContainer)
              alignItems="center"
              wrap="nowrap"
            >
              <WithStyles(GridItem) />
              <WithStyles(GridItem)
                xs={true}
              >
                <WithStyles(GridContainer)
                  direction="column"
                  spacing={0}
                >
                  <WithStyles(GridItem)>
                    <WithStyles(JTextClass)
                      uppercase={true}
                      warning={true}
                      xs={true}
                    >
                      Pending
                    </WithStyles(JTextClass)>
                  </WithStyles(GridItem)>
                  <WithStyles(GridItem)>
                    <WithStyles(JTextClass)
                      dark={true}
                      ellipsis={true}
                    >
                       (
                      )
                    </WithStyles(JTextClass)>
                  </WithStyles(GridItem)>
                </WithStyles(GridContainer)>
              </WithStyles(GridItem)>
              <WithStyles(GridItem)>
                <WithStyles(JTextClass)>
                  <WithStyles(Icon)
                    icon="lnr-cross"
                    size="small"
                  />
                </WithStyles(JTextClass)>
              </WithStyles(GridItem)>
            </WithStyles(GridContainer)>
          </WithStyles(GridItem)>
        </WithStyles(GridContainer)>
      </WithStyles(GridItem)>
    </WithStyles(GridContainer)>
  </WithStyles(GridItem)>
</div>
`;

exports[`<Attachment /> render() should render inline 1`] = `
<div>
  <Formsy(DataField)
    innerRef={[Function]}
    name="data.eventAttachments.undefined.link"
    required={false}
    validationError=""
    validationErrors={Object {}}
    validations={null}
  />
  <Formsy(DataField)
    innerRef={[Function]}
    name="data.eventAttachments.undefined.size"
    required={false}
    validationError=""
    validationErrors={Object {}}
    validations={null}
  />
  <Formsy(DataField)
    innerRef={[Function]}
    name="data.eventAttachments.undefined.type"
    required={false}
    validationError=""
    validationErrors={Object {}}
    validations={null}
  />
  <Formsy(DataField)
    innerRef={[Function]}
    name="data.eventAttachments.undefined.name"
    required={false}
    validationError=""
    validationErrors={Object {}}
    validations={null}
  />
  <WithStyles(GridItem)>
    <WithStyles(GridContainer)
      alignItems="center"
      spacing={2}
      wrap="nowrap"
    >
      <WithStyles(GridItem)>
        <WithStyles(JTextClass)
          bold={true}
          gray={true}
          xs={true}
        >
          NaN
        </WithStyles(JTextClass)>
      </WithStyles(GridItem)>
      <WithStyles(GridItem)
        xs={true}
      >
        <WithStyles(GridContainer)
          direction="column"
          spacing={0}
        >
          <WithStyles(GridItem)>
            <WithStyles(GridContainer)
              alignItems="center"
              wrap="nowrap"
            >
              <WithStyles(GridItem) />
              <WithStyles(GridItem)
                xs={true}
              >
                <WithStyles(GridContainer)
                  direction="column"
                  spacing={0}
                >
                  <WithStyles(GridItem)>
                    <WithStyles(JTextClass)
                      uppercase={true}
                      warning={true}
                      xs={true}
                    >
                      Pending
                    </WithStyles(JTextClass)>
                  </WithStyles(GridItem)>
                  <WithStyles(GridItem)>
                    <WithStyles(JTextClass)
                      dark={true}
                      ellipsis={true}
                    >
                       (
                      )
                    </WithStyles(JTextClass)>
                  </WithStyles(GridItem)>
                </WithStyles(GridContainer)>
              </WithStyles(GridItem)>
            </WithStyles(GridContainer)>
          </WithStyles(GridItem)>
        </WithStyles(GridContainer)>
      </WithStyles(GridItem)>
    </WithStyles(GridContainer)>
  </WithStyles(GridItem)>
</div>
`;
