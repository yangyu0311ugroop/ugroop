// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Checklist /> handleClick should call ifFunction with particular parameters 1`] = `
Array [
  Array [
    undefined,
    Array [
      "day",
      0,
    ],
  ],
]
`;

exports[`<Checklist /> render() should not render variant table row properly if parentType is TEMPLATE 1`] = `""`;

exports[`<Checklist /> render() should not render variant test only 1`] = `" (0 task)"`;

exports[`<Checklist /> render() should render hover properly if variant is table row 1`] = `
<div>
  <WithStyles(Button)
    color="black"
    noPadding={true}
    size="extraSmall"
    textAlign="left"
    variant="inline"
  >
    <Component
      id={0}
      variant="stringOnly"
    />
    <Component
      id={0}
      variant="stringOnly"
    />
  </WithStyles(Button)>
  <WithStyles(ForwardRef(Popover))>
    <WithStyles(Connect(WithSimplifyResaga(UserCard)))
      id={0}
      orgId={0}
    />
  </WithStyles(ForwardRef(Popover))>
</div>
`;

exports[`<Checklist /> render() should render table row 1`] = `
<WithStyles(TableRow)
  key="99955"
>
  <WithStyles(TableCell)
    isCapitalized={true}
  >
    <WithStyles(Button)
      color="black"
      noPadding={true}
      onClick={[Function]}
      size="extraSmall"
      textAlign="left"
      variant="inline"
    >
      <WithStyles(Connect(WithSimplifyResaga(Content)))
        id={99955}
        truncateLength={40}
        variant="textOnly"
      />
    </WithStyles(Button)>
  </WithStyles(TableCell)>
  <WithStyles(TableCell)
    isCapitalized={true}
  >
    <WithStyles(Connect(WithSimplifyResaga(Type)))
      id={99955}
    />
  </WithStyles(TableCell)>
  <WithStyles(TableCell)
    isCapitalized={true}
  >
    <WithStyles(Button)
      color="black"
      noPadding={true}
      onClick={[Function]}
      size="extraSmall"
      textAlign="left"
      variant="inline"
    >
      <span>
        <strong>
          (Day 
          <WithStyles(Connect(WithSimplifyResaga(DayIndex)))
            id={0}
          />
          )
        </strong>
         
        <WithStyles(Connect(WithSimplifyResaga(Content)))
          id={0}
          truncateLength={40}
          variant="textOnly"
        />
      </span>
    </WithStyles(Button)>
  </WithStyles(TableCell)>
  <WithStyles(TableCell)>
    <WithStyles(Connect(WithSimplifyResaga(UpdatedAt)))
      id={99955}
    />
  </WithStyles(TableCell)>
  <WithStyles(TableCell)
    isCapitalized={true}
  >
    <Hover>
      <Component />
    </Hover>
  </WithStyles(TableCell)>
</WithStyles(TableRow)>
`;

exports[`<Checklist /> renderCard() should renderCard 1`] = `
<div>
  <div
    className=""
    key="99955"
  >
    <WithStyles(GridContainer)
      direction="column"
    >
      <WithStyles(GridItem)>
        renderCardSummary
      </WithStyles(GridItem)>
      <WithStyles(GridItem)>
        renderCardDetails
      </WithStyles(GridItem)>
      renderCardFooter
    </WithStyles(GridContainer)>
  </div>
</div>
`;

exports[`<Checklist /> renderCardDetails() should renderCardDetails 1`] = `
<div>
  <div
    className=""
  >
    renderBody
  </div>
</div>
`;

exports[`<Checklist /> renderCardFooter() should renderCardFooter 1`] = `
<div>
  <WithStyles(GridItem)>
    some footer
  </WithStyles(GridItem)>
</div>
`;

exports[`<Checklist /> renderCardStatus() should renderCardStatus 1`] = `
<div>
  <WithStyles(GridItem)>
    <span
      className=""
    >
      <span>
        Closed by 
        <WithStyles(Connect(WithSimplifyResaga(CompletedBy)))
          id={99955}
          variant="text"
        />
      </span>
    </span>
  </WithStyles(GridItem)>
</div>
`;

exports[`<Checklist /> renderCardSummary() should renderCardSummary 1`] = `
<div>
  <WithStyles(GridContainer)
    direction="column"
  >
    <WithStyles(GridItem)>
      <WithStyles(GridContainer)
        alignItems="center"
        spacing={2}
        wrap="nowrap"
      >
        <WithStyles(GridItem)>
          <WithStyles(Connect(WithSimplifyResaga(ChecklistButton)))
            id={99955}
            onClick={[Function]}
            showChecklists={false}
            small={true}
          />
        </WithStyles(GridItem)>
        <WithStyles(GridItem)
          className=""
        >
          <WithStyles(GridContainer)
            direction="column"
            spacing={0}
          >
            <WithStyles(GridItem)>
              <WithStyles(GridContainer)
                alignItems="center"
                className=""
              >
                <WithStyles(GridItem)>
                  <WithStyles(Connect(WithSimplifyResaga(Content)))
                    bold={true}
                    id={99955}
                  />
                </WithStyles(GridItem)>
              </WithStyles(GridContainer)>
            </WithStyles(GridItem)>
            <WithStyles(GridItem)>
              <WithStyles(GridContainer)
                alignItems="center"
                spacing={2}
              >
                <WithStyles(GridItem)>
                  <WithStyles(Connect(WithSimplifyResaga(Connect(WithSimplifyResaga(DueDate)))))
                    component={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "Naked": [Function],
                        "displayName": "WithStyles(GridItem)",
                        "options": Object {
                          "defaultTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "only": [Function],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                              "width": [Function],
                            },
                            "direction": "ltr",
                            "mixins": Object {
                              "gutters": [Function],
                              "toolbar": Object {
                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                  "minHeight": 48,
                                },
                                "@media (min-width:600px)": Object {
                                  "minHeight": 64,
                                },
                                "minHeight": 56,
                              },
                            },
                            "overrides": Object {},
                            "palette": Object {
                              "action": Object {
                                "activatedOpacity": 0.12,
                                "active": "rgba(0, 0, 0, 0.54)",
                                "disabled": "rgba(0, 0, 0, 0.26)",
                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                "disabledOpacity": 0.38,
                                "focus": "rgba(0, 0, 0, 0.12)",
                                "focusOpacity": 0.12,
                                "hover": "rgba(0, 0, 0, 0.04)",
                                "hoverOpacity": 0.04,
                                "selected": "rgba(0, 0, 0, 0.08)",
                                "selectedOpacity": 0.08,
                              },
                              "augmentColor": [Function],
                              "background": Object {
                                "default": "#fafafa",
                                "paper": "#fff",
                              },
                              "common": Object {
                                "black": "#000",
                                "white": "#fff",
                              },
                              "contrastThreshold": 3,
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "error": Object {
                                "contrastText": "#fff",
                                "dark": "#d32f2f",
                                "light": "#e57373",
                                "main": "#f44336",
                              },
                              "getContrastText": [Function],
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "info": Object {
                                "contrastText": "#fff",
                                "dark": "#1976d2",
                                "light": "#64b5f6",
                                "main": "#2196f3",
                              },
                              "primary": Object {
                                "contrastText": "#fff",
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "contrastText": "#fff",
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "success": Object {
                                "contrastText": "rgba(0, 0, 0, 0.87)",
                                "dark": "#388e3c",
                                "light": "#81c784",
                                "main": "#4caf50",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "hint": "rgba(0, 0, 0, 0.38)",
                                "primary": "rgba(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                              "tonalOffset": 0.2,
                              "type": "light",
                              "warning": Object {
                                "contrastText": "rgba(0, 0, 0, 0.87)",
                                "dark": "#f57c00",
                                "light": "#ffb74d",
                                "main": "#ff9800",
                              },
                            },
                            "props": Object {},
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "shape": Object {
                              "borderRadius": 4,
                            },
                            "spacing": [Function],
                            "transitions": Object {
                              "create": [Function],
                              "duration": Object {
                                "complex": 375,
                                "enteringScreen": 225,
                                "leavingScreen": 195,
                                "short": 250,
                                "shorter": 200,
                                "shortest": 150,
                                "standard": 300,
                              },
                              "easing": Object {
                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                              },
                              "getAutoHeightDuration": [Function],
                            },
                            "typography": Object {
                              "body1": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.00938em",
                                "lineHeight": 1.5,
                              },
                              "body2": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.01071em",
                                "lineHeight": 1.43,
                              },
                              "button": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "letterSpacing": "0.02857em",
                                "lineHeight": 1.75,
                                "textTransform": "uppercase",
                              },
                              "caption": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.03333em",
                                "lineHeight": 1.66,
                              },
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": 14,
                              "fontWeightBold": 700,
                              "fontWeightLight": 300,
                              "fontWeightMedium": 500,
                              "fontWeightRegular": 400,
                              "h1": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "6rem",
                                "fontWeight": 300,
                                "letterSpacing": "-0.01562em",
                                "lineHeight": 1.167,
                              },
                              "h2": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3.75rem",
                                "fontWeight": 300,
                                "letterSpacing": "-0.00833em",
                                "lineHeight": 1.2,
                              },
                              "h3": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3rem",
                                "fontWeight": 400,
                                "letterSpacing": "0em",
                                "lineHeight": 1.167,
                              },
                              "h4": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.125rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.00735em",
                                "lineHeight": 1.235,
                              },
                              "h5": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.5rem",
                                "fontWeight": 400,
                                "letterSpacing": "0em",
                                "lineHeight": 1.334,
                              },
                              "h6": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.25rem",
                                "fontWeight": 500,
                                "letterSpacing": "0.0075em",
                                "lineHeight": 1.6,
                              },
                              "htmlFontSize": 16,
                              "overline": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.08333em",
                                "lineHeight": 2.66,
                                "textTransform": "uppercase",
                              },
                              "pxToRem": [Function],
                              "round": [Function],
                              "subtitle1": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.00938em",
                                "lineHeight": 1.75,
                              },
                              "subtitle2": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "letterSpacing": "0.00714em",
                                "lineHeight": 1.57,
                              },
                            },
                            "zIndex": Object {
                              "appBar": 1100,
                              "drawer": 1200,
                              "mobileStepper": 1000,
                              "modal": 1300,
                              "snackbar": 1400,
                              "speedDial": 1050,
                              "tooltip": 1500,
                            },
                          },
                          "name": "GridItem",
                        },
                        "propTypes": Object {
                          "classes": [Function],
                          "innerRef": [Function],
                        },
                        "render": [Function],
                        "useStyles": [Function],
                      }
                    }
                    id={99955}
                    parentNodeId={0}
                    variant="default"
                  />
                </WithStyles(GridItem)>
                <WithStyles(GridItem)>
                  <BadgeProgress
                    id={99955}
                    variant="UpNext"
                  />
                </WithStyles(GridItem)>
              </WithStyles(GridContainer)>
            </WithStyles(GridItem)>
          </WithStyles(GridContainer)>
        </WithStyles(GridItem)>
      </WithStyles(GridContainer)>
    </WithStyles(GridItem)>
    <WithStyles(GridItem)
      className=""
    >
      <WithStyles(Trail)
        id={99955}
      />
    </WithStyles(GridItem)>
  </WithStyles(GridContainer)>
</div>
`;

exports[`<Checklist /> renderCardSummary() should renderCardSummary closed 1`] = `
<div>
  <WithStyles(GridContainer)
    direction="column"
  >
    <WithStyles(GridItem)>
      <WithStyles(GridContainer)
        alignItems="center"
        spacing={2}
        wrap="nowrap"
      >
        <WithStyles(GridItem)>
          <WithStyles(Connect(WithSimplifyResaga(ChecklistButton)))
            id={99955}
            onClick={[Function]}
            showChecklists={false}
            small={true}
          />
        </WithStyles(GridItem)>
        <WithStyles(GridItem)
          className=""
        >
          <WithStyles(GridContainer)
            direction="column"
            spacing={0}
          >
            <WithStyles(GridItem)>
              <WithStyles(GridContainer)
                alignItems="center"
                className=""
              >
                <WithStyles(GridItem)>
                  <WithStyles(Connect(WithSimplifyResaga(Content)))
                    bold={true}
                    id={99955}
                  />
                </WithStyles(GridItem)>
              </WithStyles(GridContainer)>
            </WithStyles(GridItem)>
          </WithStyles(GridContainer)>
        </WithStyles(GridItem)>
        <WithStyles(GridItem)>
          <Component />
        </WithStyles(GridItem)>
      </WithStyles(GridContainer)>
    </WithStyles(GridItem)>
  </WithStyles(GridContainer)>
</div>
`;

exports[`<Checklist /> renderDefault() should renderDefault 1`] = `
<div>
  <div
    className=""
    key="99955"
  >
    <WithStyles(ForwardRef(ExpansionPanel))
      expanded={false}
      onChange={[Function]}
    >
      <WithStyles(ForwardRef(ExpansionPanelSummary))
        className=""
        classes={
          Object {
            "content": undefined,
            "expandIcon": undefined,
            "expanded": undefined,
          }
        }
        expandIcon={
          <span
            title="Show Task"
          >
            <WithStyles(Icon)
              icon="chevron-down"
              size="small"
            />
          </span>
        }
      >
        renderSummary
      </WithStyles(ForwardRef(ExpansionPanelSummary))>
      <WithStyles(ForwardRef(ExpansionPanelDetails))>
        <span />
      </WithStyles(ForwardRef(ExpansionPanelDetails))>
    </WithStyles(ForwardRef(ExpansionPanel))>
    <WithStyles(GridItem) />
  </div>
</div>
`;

exports[`<Checklist /> renderDefaultFooter() should renderDefaultFooter 1`] = `
<div>
  <WithStyles(GridItem) />
</div>
`;

exports[`<Checklist /> renderDefaultFooter() should renderDefaultFooter 2`] = `
<div>
  <WithStyles(GridItem)>
    some footer
  </WithStyles(GridItem)>
</div>
`;

exports[`<Checklist /> renderDetails() should renderDetails 1`] = `
<div>
  <Component />
</div>
`;

exports[`<Checklist /> renderDetails() should return null 1`] = `<span />`;

exports[`<Checklist /> renderLogic() should renderLogic 1`] = `
<div>
  <ConnectFunction
    id={99955}
    parentNodeId={22321}
  />
  renderBody
</div>
`;

exports[`<Checklist /> renderOption() should renderOption 1`] = `
<div>
  <option
    key="99955"
    value={99955}
  >
        
    some content
     
    (0 taskundefined)
  </option>
</div>
`;

exports[`<Checklist /> renderSummary() should renderSummary 1`] = `
<div>
  <WithStyles(GridContainer)
    direction="column"
    spacing={0}
  >
    <WithStyles(GridItem)>
      <WithStyles(GridContainer)
        alignItems="top"
        spacing={0}
      >
        <WithStyles(GridItem)>
          <WithStyles(Badge)
            color="primary"
            content=" "
            variant="imageRound"
          />
        </WithStyles(GridItem)>
        <WithStyles(GridItem)>
          <WithStyles(GridContainer)
            direction="column"
            spacing={0}
          >
            <WithStyles(GridItem)>
              <WithStyles(GridContainer)
                alignItems="center"
                spacing={0}
              >
                <WithStyles(GridItem)
                  className=""
                >
                  <WithStyles(Connect(WithSimplifyResaga(Content)))
                    bold={true}
                    editable={false}
                    id={99955}
                    multiline={true}
                    stopPropagation={true}
                    variant="default"
                  />
                </WithStyles(GridItem)>
              </WithStyles(GridContainer)>
            </WithStyles(GridItem)>
            <Hidden
              mdUp={true}
            >
              <WithStyles(GridItem)>
                <div
                  className=""
                >
                  <BadgeProgress
                    id={99955}
                    variant="total"
                  />
                </div>
              </WithStyles(GridItem)>
            </Hidden>
          </WithStyles(GridContainer)>
        </WithStyles(GridItem)>
        <Hidden
          mdDown={true}
        >
          <WithStyles(GridItem)>
            <div
              className=""
            >
              <BadgeProgress
                id={99955}
                variant="total"
              />
            </div>
          </WithStyles(GridItem)>
        </Hidden>
      </WithStyles(GridContainer)>
    </WithStyles(GridItem)>
  </WithStyles(GridContainer)>
</div>
`;

exports[`<Checklist /> renderSummary() should renderSummary when can canUpdate 1`] = `
<div>
  <WithStyles(GridContainer)
    direction="column"
    spacing={0}
  >
    <WithStyles(GridItem)>
      <WithStyles(GridContainer)
        alignItems="top"
        spacing={0}
      >
        <WithStyles(GridItem)>
          <WithStyles(Badge)
            color="primary"
            content=" "
            variant="imageRound"
          />
        </WithStyles(GridItem)>
        <WithStyles(GridItem)>
          <WithStyles(GridContainer)
            direction="column"
            spacing={0}
          >
            <WithStyles(GridItem)>
              <WithStyles(GridContainer)
                alignItems="center"
                spacing={0}
              >
                <WithStyles(GridItem)
                  className=""
                >
                  <WithStyles(Connect(WithSimplifyResaga(Content)))
                    bold={true}
                    editable={true}
                    id={99955}
                    multiline={true}
                    stopPropagation={true}
                    variant="default"
                  />
                </WithStyles(GridItem)>
              </WithStyles(GridContainer)>
            </WithStyles(GridItem)>
            <Hidden
              mdUp={true}
            />
          </WithStyles(GridContainer)>
        </WithStyles(GridItem)>
        <Hidden
          mdDown={true}
        />
      </WithStyles(GridContainer)>
    </WithStyles(GridItem)>
  </WithStyles(GridContainer)>
</div>
`;

exports[`<Checklist /> renderSummary() should renderSummary when can do something 1`] = `
<div>
  <WithStyles(GridContainer)
    direction="column"
    spacing={0}
  >
    <WithStyles(GridItem)>
      <WithStyles(GridContainer)
        alignItems="top"
        spacing={0}
      >
        <WithStyles(GridItem)>
          <WithStyles(Connect(WithSimplifyResaga(Status)))
            disabled={true}
            id={99955}
            onClick={[Function]}
            paddingRight={true}
            variant="checkInput"
          />
        </WithStyles(GridItem)>
        <WithStyles(GridItem)>
          <WithStyles(GridContainer)
            direction="column"
            spacing={0}
          >
            <WithStyles(GridItem)>
              <WithStyles(GridContainer)
                alignItems="center"
                spacing={0}
              >
                <WithStyles(GridItem)
                  className=""
                >
                  <WithStyles(Connect(WithSimplifyResaga(Content)))
                    bold={true}
                    editable={false}
                    id={99955}
                    multiline={true}
                    stopPropagation={true}
                    variant="default"
                  />
                </WithStyles(GridItem)>
              </WithStyles(GridContainer)>
            </WithStyles(GridItem)>
            <Hidden
              mdUp={true}
            >
              <WithStyles(GridItem)>
                <div
                  className=""
                >
                  <BadgeProgress
                    id={99955}
                    variant="UpNext"
                  />
                </div>
              </WithStyles(GridItem)>
            </Hidden>
            <WithStyles(GridItem)
              className=""
            >
              <WithStyles(GridContainer)
                alignItems="center"
                spacing={0}
              >
                <WithStyles(GridItem)>
                  <WithStyles(Connect(WithSimplifyResaga(Connect(WithSimplifyResaga(DueDate)))))
                    anchorDate=""
                    id={99955}
                    parentNodeId={0}
                    showTime={false}
                    variant="default"
                  />
                </WithStyles(GridItem)>
              </WithStyles(GridContainer)>
            </WithStyles(GridItem)>
          </WithStyles(GridContainer)>
        </WithStyles(GridItem)>
        <Hidden
          mdDown={true}
        >
          <WithStyles(GridItem)>
            <div
              className=""
            >
              <BadgeProgress
                id={99955}
                variant="UpNext"
              />
            </div>
          </WithStyles(GridItem)>
        </Hidden>
        <WithStyles(Connect(WithSimplifyResaga(ChecklistMenu)))
          id={99955}
          index={0}
          parentNodeId={0}
        />
      </WithStyles(GridContainer)>
    </WithStyles(GridItem)>
  </WithStyles(GridContainer)>
</div>
`;

exports[`<Checklist /> renderSummaryInfo() should renderSummaryInfo 1`] = `
<div>
  <WithStyles(GridItem)>
    <div
      className=""
    >
      <BadgeProgress
        id={99955}
        variant="total"
      />
    </div>
  </WithStyles(GridItem)>
</div>
`;

exports[`<Checklist /> toggleExpanded() should toggleExpanded 1`] = `
Array [
  Array [
    Object {
      "expandedChecklistId": 99955,
    },
  ],
  Array [
    Object {
      "expandedChecklistId": 0,
    },
  ],
]
`;

exports[`<Checklist /> toggleExpanded() should toggleExpanded use state 1`] = `
Array [
  Array [
    Object {
      "expandedChecklistId": 0,
    },
  ],
]
`;
