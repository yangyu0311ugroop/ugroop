// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<UpNextCardContainer /> handleGetTimesSuccess() should call setValue 1`] = `
Array [
  Array [
    Object {
      "timeNodes": "timeReducer",
      "times": Array [
        "0",
        "1",
        "10",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
      ],
    },
  ],
]
`;

exports[`<UpNextCardContainer /> handleGetTimesSuccess() should call setValue 2`] = `
Array [
  Array [
    Object {
      "timeNodes": "timeReducer",
      "times": Array [
        "0",
        "1",
        "10",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
      ],
    },
  ],
  Array [
    Object {
      "timeNodes": Object {},
      "times": Array [],
    },
  ],
]
`;

exports[`<UpNextCardContainer /> render() should render correctly 1`] = `
<div>
  <WithStyles(Connect(WithSimplifyResaga(Connect(WithSimplifyResaga(UpNextCardRenderer)))))
    classes={Object {}}
    resaga={
      Object {
        "dispatchTo": [MockFunction] {
          "calls": Array [
            Array [
              "Users",
              "getUserRelatedTemplates",
              Object {
                "onSuccess": [Function],
                "payload": Object {
                  "activeOnly": true,
                },
              },
            ],
            Array [
              "Users",
              "getUserRelatedTemplates",
              Object {
                "onSuccess": [Function],
                "payload": Object {
                  "activeOnly": true,
                },
              },
            ],
            Array [
              "Users",
              "getUserRelatedTemplates",
              Object {
                "onSuccess": [Function],
                "payload": Object {
                  "activeOnly": true,
                },
              },
            ],
            Array [
              "Users",
              "getUserRelatedTemplates",
              Object {
                "onSuccess": "handleGetTimesSuccess",
                "payload": Object {
                  "activeOnly": true,
                },
              },
            ],
            Array [
              "Users",
              "getUserRelatedTemplates",
              Object {
                "onSuccess": [Function],
                "payload": Object {
                  "activeOnly": true,
                },
              },
            ],
            Array [
              "Users",
              "getUserRelatedTemplates",
              Object {
                "onSuccess": [Function],
                "payload": Object {
                  "activeOnly": true,
                },
              },
            ],
            Array [
              "Users",
              "getUserRelatedTemplates",
              Object {
                "onSuccess": [Function],
                "payload": Object {
                  "activeOnly": true,
                },
              },
            ],
            Array [
              "Users",
              "getUserRelatedTemplates",
              Object {
                "onSuccess": [Function],
                "payload": Object {
                  "activeOnly": true,
                },
              },
            ],
            Array [
              "Users",
              "getUserRelatedTemplates",
              Object {
                "onSuccess": [Function],
                "payload": Object {
                  "activeOnly": true,
                },
              },
            ],
            Array [
              "Events",
              "getEventsById",
              Object {
                "payload": Object {
                  "ids": Array [],
                },
              },
            ],
            Array [
              "Users",
              "getUserRelatedTemplates",
              Object {
                "onSuccess": [Function],
                "payload": Object {
                  "activeOnly": true,
                },
              },
            ],
            Array [
              "Users",
              "getUserRelatedTemplates",
              Object {
                "onSuccess": [Function],
                "payload": Object {
                  "activeOnly": true,
                },
              },
            ],
            Array [
              "Users",
              "getUserRelatedTemplates",
              Object {
                "onSuccess": [Function],
                "payload": Object {
                  "activeOnly": true,
                },
              },
            ],
            Array [
              "Nodes",
              "getTimes",
              Object {
                "onSuccess": "onSuccess",
                "payload": Object {
                  "ids": Array [
                    1,
                    2,
                    3,
                  ],
                },
              },
            ],
            Array [
              "Users",
              "getUserRelatedTemplates",
              Object {
                "onSuccess": [Function],
                "payload": Object {
                  "activeOnly": true,
                },
              },
            ],
            Array [
              "Users",
              "getUserRelatedTemplates",
              Object {
                "onSuccess": [Function],
                "payload": Object {
                  "activeOnly": true,
                },
              },
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "setValue": [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "timeNodes": "timeReducer",
                "times": Array [
                  "0",
                  "1",
                  "10",
                  "2",
                  "3",
                  "4",
                  "5",
                  "6",
                  "7",
                  "8",
                  "9",
                ],
              },
            ],
            Array [
              Object {
                "timeNodes": Object {},
                "times": Array [],
              },
            ],
            Array [
              Object {
                "timeNodes": Object {},
                "times": Array [],
              },
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
      }
    }
  />
</div>
`;
