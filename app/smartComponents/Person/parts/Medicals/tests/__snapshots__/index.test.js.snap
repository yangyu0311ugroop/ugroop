// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Medicals /> Default Variant should match snapshot if value's length is greater than 0 1`] = `
<WithStyles(GridContainer)
  direction="column"
  spacing={3}
  wrap="nowrap"
>
  <WithStyles(GridItem)>
    <WithStyles(GridContainer)
      alignItems="baseline"
      wrap="nowrap"
    >
      <WithStyles(GridItem)
        xs={true}
      >
        <WithStyles(GridContainer)
          alignItems="baseline"
          noWrap={true}
          spacing={0}
        >
          <WithStyles(GridItem)>
            <WithStyles(EditableLabel)>
              <FormattedMessage
                defaultMessage="Medical Conditions"
                id="app.smartComponents.Person.parts.Medicals.label"
              />
            </WithStyles(EditableLabel)>
          </WithStyles(GridItem)>
        </WithStyles(GridContainer)>
      </WithStyles(GridItem)>
      <WithStyles(GridItem)>
        <WithStyles(Connect(WithSimplifyResaga(MedicalCreate)))
          id={null}
        />
      </WithStyles(GridItem)>
    </WithStyles(GridContainer)>
  </WithStyles(GridItem)>
  <WithStyles(GridItem)>
    <WithStyles(GridContainer)
      direction="column"
      wrap="nowrap"
    >
      <WithStyles(GridItem)
        key="medical.1"
      >
        <ConnectFunction
          id={1}
          readOnly={false}
          variant="editable"
        />
      </WithStyles(GridItem)>
      <WithStyles(GridItem)
        key="medical.2"
      >
        <ConnectFunction
          id={2}
          readOnly={false}
          variant="editable"
        />
      </WithStyles(GridItem)>
    </WithStyles(GridContainer)>
  </WithStyles(GridItem)>
</WithStyles(GridContainer)>
`;

exports[`<Medicals /> Default Variant should match snapshot if value's length is less than 1 1`] = `
<WithStyles(GridContainer)
  direction="column"
  spacing={0}
  wrap="nowrap"
>
  <WithStyles(GridItem)>
    <WithStyles(GridContainer)
      alignItems="baseline"
      wrap="nowrap"
    >
      <WithStyles(GridItem)
        xs={true}
      >
        <WithStyles(GridContainer)
          alignItems="baseline"
          noWrap={true}
          spacing={0}
        >
          <WithStyles(GridItem)>
            <WithStyles(EditableLabel)>
              <FormattedMessage
                defaultMessage="Medical Conditions"
                id="app.smartComponents.Person.parts.Medicals.label"
              />
            </WithStyles(EditableLabel)>
          </WithStyles(GridItem)>
          <WithStyles(GridItem)>
            <Styled(MuiBox)
              pl={1}
            >
              <ConnectFunction
                disabled={false}
                id={null}
              />
            </Styled(MuiBox)>
          </WithStyles(GridItem)>
        </WithStyles(GridContainer)>
      </WithStyles(GridItem)>
      <WithStyles(GridItem)>
        <WithStyles(Connect(WithSimplifyResaga(MedicalCreate)))
          id={null}
        />
      </WithStyles(GridItem)>
    </WithStyles(GridContainer)>
  </WithStyles(GridItem)>
  <WithStyles(Connect(WithSimplifyResaga(Empty)))
    description={
      <WithStyles(EditablePlaceholder)>
        <FormattedMessage
          defaultMessage="Enter medical conditions here"
          id="app.smartComponents.Person.parts.Medicals.placeholder"
        />
      </WithStyles(EditablePlaceholder)>
    }
  />
</WithStyles(GridContainer)>
`;

exports[`<Medicals /> VARIANTS.COUNT should match snapshot 1`] = `0`;

exports[`<Medicals /> VARIANTS.ICON should match snapshot if value's length is greater than 0 1`] = `
<WithStyles(GridItem)>
  <WithStyles(Tooltip)
    isLight={true}
    title={
      <WithStyles(GridItem)>
        <WithStyles(GridContainer)
          direction="column"
          wrap="nowrap"
        >
          <WithStyles(GridItem)>
            <Memo(Connect(WithSimplifyResaga(Medical)))
              id={1}
              readOnly={false}
              variant="textOnly"
            />
          </WithStyles(GridItem)>
          <WithStyles(GridItem)>
            <Memo(Connect(WithSimplifyResaga(Medical)))
              id={2}
              readOnly={false}
              variant="textOnly"
            />
          </WithStyles(GridItem)>
        </WithStyles(GridContainer)>
      </WithStyles(GridItem)>
    }
  >
    <WithStyles(MedicalIcon)
      noMedical={false}
      size="extraSmall"
    />
  </WithStyles(Tooltip)>
</WithStyles(GridItem)>
`;

exports[`<Medicals /> VARIANTS.ICON should match snapshot if value's length is less than 1 1`] = `
<WithStyles(GridItem)>
  <WithStyles(Tooltip)
    isLight={true}
    title={false}
  >
    <WithStyles(MedicalIcon)
      noMedical={true}
      size="extraSmall"
    />
  </WithStyles(Tooltip)>
</WithStyles(GridItem)>
`;

exports[`<Medicals /> VARIANTS.ICON should match snapshot if value's length is less than 1 and nomedical is true 1`] = `""`;

exports[`<Medicals /> VARIANTS.LOGIC should match snapshot 1`] = `
<ConnectFunction
  id={null}
  keyPath={Array []}
  value={Array []}
/>
`;

exports[`<Medicals /> VARIANTS.ROW should match snapshot 1`] = `
<WithStyles(GridContainer)
  direction="column"
  spacing={0}
  wrap="nowrap"
>
  <WithStyles(GridItem)>
    <WithStyles(Connect(WithSimplifyResaga(Empty)))
      description={
        <WithStyles(EditablePlaceholder)>
          <FormattedMessage
            defaultMessage="Enter medical conditions here"
            id="app.smartComponents.Person.parts.Medicals.placeholder"
          />
        </WithStyles(EditablePlaceholder)>
      }
    />
  </WithStyles(GridItem)>
</WithStyles(GridContainer)>
`;

exports[`<Medicals /> VARIANTS.ROW should match snapshot if value is not empty array 1`] = `
<WithStyles(GridContainer)
  direction="column"
  spacing={0}
  wrap="nowrap"
>
  <WithStyles(GridItem)>
    <WithStyles(GridContainer)
      direction="column"
      wrap="nowrap"
    >
      <WithStyles(GridItem)
        key="medical.1"
      >
        <ConnectFunction
          id={1}
          readOnly={false}
          variant="editable"
        />
      </WithStyles(GridItem)>
      <WithStyles(GridItem)
        key="medical.2"
      >
        <ConnectFunction
          id={2}
          readOnly={false}
          variant="editable"
        />
      </WithStyles(GridItem)>
    </WithStyles(GridContainer)>
  </WithStyles(GridItem)>
</WithStyles(GridContainer)>
`;

exports[`<Medicals /> VARIANTS.TEXT_ONLY should render text only if value's length prop is greater than 0 1`] = `
<WithStyles(GridItem)>
  <WithStyles(GridContainer)
    direction="column"
    wrap="nowrap"
  >
    <WithStyles(GridItem)
      key="medical.1"
    >
      <ConnectFunction
        id={1}
        readOnly={false}
        variant="textOnly"
      />
    </WithStyles(GridItem)>
    <WithStyles(GridItem)
      key="medical.2"
    >
      <ConnectFunction
        id={2}
        readOnly={false}
        variant="textOnly"
      />
    </WithStyles(GridItem)>
  </WithStyles(GridContainer)>
</WithStyles(GridItem)>
`;

exports[`<Medicals /> VARIANTS.TEXT_ONLY should render text only if value's length prop is less than 1 1`] = `
<WithStyles(GridItem)>
  <WithStyles(GridContainer)
    direction="column"
    wrap="nowrap"
  >
    <WithStyles(GridItem)
      key="medical.1"
    >
      <ConnectFunction
        id={1}
        readOnly={false}
        variant="textOnly"
      />
    </WithStyles(GridItem)>
    <WithStyles(GridItem)
      key="medical.2"
    >
      <ConnectFunction
        id={2}
        readOnly={false}
        variant="textOnly"
      />
    </WithStyles(GridItem)>
  </WithStyles(GridContainer)>
</WithStyles(GridItem)>
`;

exports[`<Medicals /> renderCreate() should renderMedical 1`] = `<div />`;

exports[`<Medicals /> renderMedical() should renderMedical 1`] = `
<div>
  <Component />
</div>
`;

exports[`<Medicals /> renderMedicals() should renderMedicals 1`] = `
<div>
  <WithStyles(GridContainer)
    direction="column"
    wrap="nowrap"
  >
    renderMedical
  </WithStyles(GridContainer)>
</div>
`;
