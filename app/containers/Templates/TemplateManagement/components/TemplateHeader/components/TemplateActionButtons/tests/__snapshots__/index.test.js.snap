// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TemplateActionButtons cloneTemplateSuccess should call setValue 1`] = `
Array [
  Array [
    Object {
      "tours": [Function],
    },
  ],
]
`;

exports[`TemplateActionButtons fetchOrgInfo should dispatchTo 1`] = `
Array [
  Array [
    "Nodes",
    "updateNode",
    Object {
      "onSuccess": [Function],
      "payload": Object {
        "node": Object {
          "customData": Object {
            "organisationId": 999,
          },
          "type": "template",
        },
        "nodeId": 1,
      },
    },
  ],
]
`;

exports[`TemplateActionButtons handleError should call openErrorSnackbar helper if err.status is unauthorized 1`] = `
Array [
  Array [
    "You are not authorized in doing the action",
    Object {
      "analyse": [MockFunction],
      "dispatch": [MockFunction],
      "dispatchTo": [MockFunction],
      "isLoading": [MockFunction],
      "setValue": [MockFunction],
    },
  ],
]
`;

exports[`TemplateActionButtons openComment should call resaga.setValue 1`] = `
Array [
  Array [
    Object {
      "nodeId": 99,
      "nodeStore": "templates",
    },
  ],
]
`;

exports[`TemplateActionButtons renderMoveDialog should call dispatchTo 1`] = `
<div>
  <Component
    dialogTitle="Move "
    onConfirmSuccess={[Function]}
  />
</div>
`;

exports[`TemplateActionButtons should render TemplateActionButtonList 1`] = `
<div>
  <WithStyles(UGDialog)
    button={1}
    cancelFunc={[Function]}
    confirmButton="Go back"
    confirmFunc={[Function]}
    customClassnames={
      Object {
        "headline": undefined,
      }
    }
    dialogTitle="FEATURE UNAVAILABLE"
    headlineIcon="lnr-construction"
    headlineText="So we can make it work great we are still working on it. It will be coming soon. Thank you for your understanding."
    headlineTitle="This feature is under construction"
    open={false}
    template="custom"
  />
  <WithStyles(UGDialog)
    cancelFunc={[Function]}
    confirmFunc={[Function]}
    dialogTitle="Delete This Tour"
    headlineText="Are you sure you want to delete this tour? This action cannot be undone"
    headlineTitle=""
    open={false}
    template="delete"
  />
  <WithStyles(UGDialog)
    cancelButton="Cancel"
    cancelFunc={[Function]}
    confirmButton="Confirm"
    confirmFunc={[Function]}
    customClassnames={
      Object {
        "confirmButton": undefined,
      }
    }
    dialogTitle="Copy Option"
    disabled={false}
    headlineIcon="lnr-papers"
    headlineText={
      <WithStyles(ForwardRef(Card))>
        <WithStyles(GridContainer)
          alignItems="center"
          direction="column"
        >
          <WithStyles(GridItem)>
            <WithStyles(GridContainer)
              direction="column"
              spacing={0}
            >
              <WithStyles(GridItem)>
                <WithStyles(ForwardRef(FormControlLabel))
                  classes={
                    Object {
                      "label": undefined,
                    }
                  }
                  control={
                    <WithStyles(ForwardRef(Checkbox))
                      checked={false}
                      checkedIcon={
                        <WithStyles(Icon)
                          icon="lnr-check-square"
                        />
                      }
                      classes={
                        Object {
                          "checked": undefined,
                          "root": undefined,
                        }
                      }
                      icon={
                        <WithStyles(Icon)
                          icon="lnr-square"
                        />
                      }
                      onChange={[Function]}
                    />
                  }
                  label="Copy checklist to the new tour"
                />
              </WithStyles(GridItem)>
              <WithStyles(GridItem)>
                <WithStyles(ForwardRef(FormControlLabel))
                  classes={
                    Object {
                      "label": undefined,
                    }
                  }
                  control={
                    <WithStyles(ForwardRef(Checkbox))
                      checked={false}
                      checkedIcon={
                        <WithStyles(Icon)
                          icon="lnr-check-square"
                        />
                      }
                      classes={
                        Object {
                          "checked": undefined,
                          "root": undefined,
                        }
                      }
                      icon={
                        <WithStyles(Icon)
                          icon="lnr-square"
                        />
                      }
                      onChange={[Function]}
                    />
                  }
                  label="Copy events to the new tour"
                />
              </WithStyles(GridItem)>
            </WithStyles(GridContainer)>
          </WithStyles(GridItem)>
        </WithStyles(GridContainer)>
      </WithStyles(ForwardRef(Card))>
    }
    headlineTitle=""
    loading={false}
    onCloseFunc={[Function]}
    open={false}
    template="confirm"
  />
  <withRouter(WithStyles(Connect(WithSimplifyResaga(TemplateActionButtonList))))
    onClickAddChecklist={[Function]}
    onClickClone={[Function]}
    onClickDelete={[Function]}
    onClickFollowers={[Function]}
    onClickMove={[Function]}
    onClickParticipants={[Function]}
    onClickShare={[Function]}
    onClickUnderConstruction={[Function]}
    onStiky={false}
    openComment={[Function]}
    showCopyLinkDialog={[Function]}
    templateId={1}
  />
  <ConnectFunction
    orgId={0}
  >
    <Component />
  </ConnectFunction>
</div>
`;
