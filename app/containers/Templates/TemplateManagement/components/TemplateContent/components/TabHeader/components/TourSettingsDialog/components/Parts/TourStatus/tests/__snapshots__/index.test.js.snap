// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TourStatus /> render() should render correctly 1`] = `
<div>
  <WithStyles(GridItem)>
    <WithStyles(GridContainer)
      card={true}
      direction="column"
      highlight={true}
      spacing={2}
    >
      <WithStyles(GridItem)>
        <WithStyles(GridContainer)
          direction="column"
          spacing={0}
        >
          <WithStyles(GridItem)>
            <WithStyles(JTextClass)
              dark={true}
              lg={true}
            >
              Travel Status
            </WithStyles(JTextClass)>
          </WithStyles(GridItem)>
          <WithStyles(GridItem)>
            <WithStyles(JTextClass)
              gray={true}
              nowrap={false}
            >
              Cancel or re-activate.
            </WithStyles(JTextClass)>
          </WithStyles(GridItem)>
        </WithStyles(GridContainer)>
      </WithStyles(GridItem)>
      <WithStyles(GridItem)>
        <WithStyles(GridContainer)
          direction="column"
          spacing={0}
        >
          <WithStyles(GridItem)>
            <WithStyles(Connect(WithSimplifyResaga(Status)))
              variant="editable"
            />
          </WithStyles(GridItem)>
        </WithStyles(GridContainer)>
      </WithStyles(GridItem)>
    </WithStyles(GridContainer)>
  </WithStyles(GridItem)>
</div>
`;

exports[`<TourStatus /> render() should render text field if variant is text field 1`] = `
<Fragment>
  <ContextProvider
    value={
      Object {
        "isFormDisabled": [Function],
      }
    }
  >
    <Formsy
      disabled={false}
      getErrorMessage={[Function]}
      getErrorMessages={[Function]}
      getValue={[Function]}
      hasValue={[Function]}
      isFormDisabled={[Function]}
      isFormSubmitted={[Function]}
      isPristine={[Function]}
      isRequired={[Function]}
      isValid={[Function]}
      isValidValue={[Function]}
      mapping={null}
      onChange={[Function]}
      onError={[Function]}
      onInvalid={[Function]}
      onInvalidSubmit={[Function]}
      onReset={[Function]}
      onSubmit={[Function]}
      onValid={[Function]}
      onValidSubmit={[Function]}
      preventExternalInvalidation={false}
      resetValue={[Function]}
      setValidations={[Function]}
      setValue={[Function]}
      showError={[Function]}
      showRequired={[Function]}
      validationErrors={null}
    >
      <Wrapped
        canSubmitForm={true}
        cancelButtonContent="Discard"
        cancelForm={[Function]}
        isFormChanged={false}
        isFormDisabled={false}
        loading={false}
        renderCancelButton={[Function]}
        renderSubmitButton={[Function]}
        resetForm={[Function]}
        submitButtonContent="Submit"
        submitForm={[Function]}
      >
        <WithStyles(GridItem)>
          <WithStyles(GridContainer)
            card={true}
            direction="column"
            highlight={true}
            spacing={2}
          >
            <WithStyles(GridItem)>
              <WithStyles(GridContainer)
                direction="column"
                spacing={0}
              >
                <WithStyles(GridItem)>
                  <WithStyles(JTextClass)
                    dark={true}
                    lg={true}
                  >
                    Travel Status
                  </WithStyles(JTextClass)>
                </WithStyles(GridItem)>
                <WithStyles(GridItem)>
                  <WithStyles(JTextClass)
                    gray={true}
                    nowrap={false}
                  >
                    Cancel or re-activate.
                  </WithStyles(JTextClass)>
                </WithStyles(GridItem)>
              </WithStyles(GridContainer)>
            </WithStyles(GridItem)>
            <WithStyles(GridItem)>
              <WithStyles(GridContainer)
                direction="column"
                spacing={0}
              >
                <WithStyles(GridItem)>
                  <WithStyles(Connect(WithSimplifyResaga(Status)))
                    variant="editable"
                  />
                </WithStyles(GridItem)>
              </WithStyles(GridContainer)>
            </WithStyles(GridItem)>
          </WithStyles(GridContainer)>
        </WithStyles(GridItem)>
      </Wrapped>
    </Formsy>
  </ContextProvider>
  <DiscardConfirmationDialog
    onCancel={[Function]}
    onConfirm={[Function]}
    open={false}
  />
</Fragment>
`;

exports[`<TourStatus /> render() should render text only variant 1`] = `
<div>
  <WithStyles(GridItem)>
    <WithStyles(GridContainer)
      card={true}
      direction="column"
      highlight={true}
      spacing={2}
    >
      <WithStyles(GridItem)>
        <WithStyles(GridContainer)
          direction="column"
          spacing={0}
        >
          <WithStyles(GridItem)>
            <WithStyles(JTextClass)
              dark={true}
              lg={true}
            >
              Travel Status
            </WithStyles(JTextClass)>
          </WithStyles(GridItem)>
          <WithStyles(GridItem)>
            <WithStyles(JTextClass)
              gray={true}
              nowrap={false}
            >
              Cancel or re-activate.
            </WithStyles(JTextClass)>
          </WithStyles(GridItem)>
        </WithStyles(GridContainer)>
      </WithStyles(GridItem)>
      <WithStyles(GridItem)>
        <WithStyles(GridContainer)
          direction="column"
          spacing={0}
        >
          <WithStyles(GridItem)>
            <WithStyles(Connect(WithSimplifyResaga(Status)))
              variant="editable"
            />
          </WithStyles(GridItem)>
        </WithStyles(GridContainer)>
      </WithStyles(GridItem)>
    </WithStyles(GridContainer)>
  </WithStyles(GridItem)>
</div>
`;
