// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddTemplateModalBody should render what it should render 1`] = `
<Fragment>
  <WithStyles(GridContainer)
    direction="column"
    spacing={0}
  >
    <WithStyles(GridItem)>
      <WithStyles(H5)
        className="AddTemplateModalBody-label"
      >
        What would you like to call this tour, trip or journey?
      </WithStyles(H5)>
      <FormsyInterceptor
        autoFocus={true}
        className="AddTemplateModalBody-inputText"
        label={
          <FormattedMessage
            defaultMessage="Title"
            id="app.components.UGAddTemplateModal.Body.titleLabel"
          />
        }
        name="content"
        onChange={[MockFunction]}
        onInterceptValue={[Function]}
        required={true}
        validationErrors={
          Object {
            "maxLength": <FormattedMessage
              defaultMessage="too long (max: 100)"
              id="app.components.UGAddTemplateModal.Body.titleMaxLength"
            />,
          }
        }
        validations={
          Object {
            "maxLength": 100,
          }
        }
      />
    </WithStyles(GridItem)>
    <WithStyles(GridItem)>
      <WithStyles(H5)
        className="AddTemplateModalBody-label"
      >
        And now some words describing the tour?
      </WithStyles(H5)>
      <WithStyles(UGRichEditor)
        onChange={[MockFunction]}
        toolBarId="add-template-modal"
        wrapperClassname="AddTemplateModalBody-editor"
      />
    </WithStyles(GridItem)>
    <WithStyles(GridItem)>
      <WithStyles(GridContainer)>
        <WithStyles(GridItem)
          md={10}
          xs={12}
        >
          <WithStyles(H5)
            className="AddTemplateModalBody-label"
          >
            How many days is this going to be? Don
            '
            t worry, you can always change it later
          </WithStyles(H5)>
          <FormsyInterceptor
            InputProps={
              Object {
                "inputProps": Object {
                  "min": "0",
                },
              }
            }
            className="AddTemplateModalBody-durationInput"
            label={
              <FormattedMessage
                defaultMessage="Duration of tour"
                id="app.components.UGAddTemplateModal.Body.durationLabel"
              />
            }
            name="duration"
            onChange={[MockFunction]}
            onInterceptValue={[Function]}
            type="number"
            validationErrors={
              Object {
                "isGreaterThanOrEqual": <FormattedMessage
                  defaultMessage="Duration should be greater than 0"
                  id="app.components.UGAddTemplateModal.Body.durationGreaterThanError"
                />,
                "isLessThanOrEqual": <FormattedMessage
                  defaultMessage="Duration should be less than 50"
                  id="app.components.UGAddTemplateModal.Body.durationLessThanError"
                />,
              }
            }
            validations="isLessThanOrEqual:50,isGreaterThanOrEqual:1"
            value="7"
          />
        </WithStyles(GridItem)>
      </WithStyles(GridContainer)>
    </WithStyles(GridItem)>
    <WithStyles(GridItem)>
      <WithStyles(GridContainer)
        spacing={0}
      >
        <WithStyles(GridItem)
          md={5}
          xs={12}
        >
          <WithStyles(H5)
            className="AddTemplateModalBody-label"
          >
            Do you know when this tour starts?
          </WithStyles(H5)>
          <WithStyles(ForwardRef(FormLabel))
            className=""
          >
            Exact Date for Tour
          </WithStyles(ForwardRef(FormLabel))>
          <ForwardRef
            FormHelperTextProps={
              Object {
                "classes": Object {
                  "error": "",
                },
              }
            }
            className="AddTemplateModalBody-datePicker"
            disablePast={false}
            format="D MMMM YYYY"
            fullWidth={true}
            helperText=""
            invalidLabel=" "
            leftArrowIcon={
              <WithStyles(Icon)
                icon="arrow-left"
              />
            }
            onBlur={null}
            onChange={[MockFunction]}
            rightArrowIcon={
              <WithStyles(Icon)
                icon="arrow-right"
              />
            }
            value="example-date-val"
          />
        </WithStyles(GridItem)>
        <WithStyles(GridItem)
          className="AddTemplateModalBody-middleOr"
          md={1}
          xs={12}
        >
          <p
            className="AddTemplateModalBody-label"
          >
            OR
          </p>
        </WithStyles(GridItem)>
        <WithStyles(GridItem)
          md={6}
          xs={12}
        >
          <WithStyles(H5)
            className="AddTemplateModalBody-label"
          >
            Which day of the week will the tour start?
          </WithStyles(H5)>
          <WithStyles(ForwardRef(FormControl))
            className="AddTemplateModalBody-selectSpecific"
          >
            <WithStyles(ForwardRef(FormLabel))>
              Day of Week for Tour
            </WithStyles(ForwardRef(FormLabel))>
            <WithStyles(ForwardRef(Select))
              IconComponent="span"
              className="AddTemplateModalBody-selectSpecific"
              disabled={true}
              onChange={[MockFunction]}
              placeholder="Day of Week for Tour"
              value={0}
            >
              <WithStyles(ForwardRef(MenuItem))
                key="0"
                value="1"
              >
                Monday
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                key="1"
                value="2"
              >
                Tuesday
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                key="2"
                value="3"
              >
                Wednesday
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                key="3"
                value="4"
              >
                Thursday
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                key="4"
                value="5"
              >
                Friday
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                key="5"
                value="6"
              >
                Saturday
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                key="6"
                value="0"
              >
                Sunday
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                key="7"
                value="none"
              >
                NA
              </WithStyles(ForwardRef(MenuItem))>
            </WithStyles(ForwardRef(Select))>
            <WithStyles(Button)
              className="AddTemplateModalBody-clearLineBtn"
              onClick={[MockFunction]}
              variant="inline"
            >
              Clear line
            </WithStyles(Button)>
          </WithStyles(ForwardRef(FormControl))>
        </WithStyles(GridItem)>
      </WithStyles(GridContainer)>
    </WithStyles(GridItem)>
  </WithStyles(GridContainer)>
  <br />
</Fragment>
`;

exports[`AddTemplateModalBody should render what it should render if error exist 1`] = `
<Fragment>
  <WithStyles(GridContainer)
    direction="column"
    spacing={0}
  >
    <WithStyles(GridItem)>
      <WithStyles(H5)
        className="AddTemplateModalBody-label"
      >
        What would you like to call this tour, trip or journey?
      </WithStyles(H5)>
      <FormsyInterceptor
        autoFocus={true}
        className="AddTemplateModalBody-inputText"
        label={
          <FormattedMessage
            defaultMessage="Title"
            id="app.components.UGAddTemplateModal.Body.titleLabel"
          />
        }
        name="content"
        onChange={[MockFunction]}
        onInterceptValue={[Function]}
        required={true}
        validationErrors={
          Object {
            "maxLength": <FormattedMessage
              defaultMessage="too long (max: 100)"
              id="app.components.UGAddTemplateModal.Body.titleMaxLength"
            />,
          }
        }
        validations={
          Object {
            "maxLength": 100,
          }
        }
      />
    </WithStyles(GridItem)>
    <WithStyles(GridItem)>
      <WithStyles(H5)
        className="AddTemplateModalBody-label"
      >
        And now some words describing the tour?
      </WithStyles(H5)>
      <WithStyles(UGRichEditor)
        onChange={[MockFunction]}
        toolBarId="add-template-modal"
        wrapperClassname="AddTemplateModalBody-editor"
      />
    </WithStyles(GridItem)>
    <WithStyles(GridItem)>
      <WithStyles(GridContainer)>
        <WithStyles(GridItem)
          md={10}
          xs={12}
        >
          <WithStyles(H5)
            className="AddTemplateModalBody-label"
          >
            How many days is this going to be? Don
            '
            t worry, you can always change it later
          </WithStyles(H5)>
          <FormsyInterceptor
            InputProps={
              Object {
                "inputProps": Object {
                  "min": "0",
                },
              }
            }
            className="AddTemplateModalBody-durationInput"
            label={
              <FormattedMessage
                defaultMessage="Duration of tour"
                id="app.components.UGAddTemplateModal.Body.durationLabel"
              />
            }
            name="duration"
            onChange={[MockFunction]}
            onInterceptValue={[Function]}
            type="number"
            validationErrors={
              Object {
                "isGreaterThanOrEqual": <FormattedMessage
                  defaultMessage="Duration should be greater than 0"
                  id="app.components.UGAddTemplateModal.Body.durationGreaterThanError"
                />,
                "isLessThanOrEqual": <FormattedMessage
                  defaultMessage="Duration should be less than 50"
                  id="app.components.UGAddTemplateModal.Body.durationLessThanError"
                />,
              }
            }
            validations="isLessThanOrEqual:50,isGreaterThanOrEqual:1"
            value="7"
          />
        </WithStyles(GridItem)>
      </WithStyles(GridContainer)>
    </WithStyles(GridItem)>
    <WithStyles(GridItem)>
      <WithStyles(GridContainer)
        spacing={0}
      >
        <WithStyles(GridItem)
          md={5}
          xs={12}
        >
          <WithStyles(H5)
            className="AddTemplateModalBody-label"
          >
            Do you know when this tour starts?
          </WithStyles(H5)>
          <WithStyles(ForwardRef(FormLabel))
            className=""
          >
            Exact Date for Tour
          </WithStyles(ForwardRef(FormLabel))>
          <ForwardRef
            FormHelperTextProps={
              Object {
                "classes": Object {
                  "error": "",
                },
              }
            }
            className="AddTemplateModalBody-datePicker"
            disablePast={false}
            format="D MMMM YYYY"
            fullWidth={true}
            helperText=""
            invalidLabel=" "
            leftArrowIcon={
              <WithStyles(Icon)
                icon="arrow-left"
              />
            }
            onBlur={null}
            onChange={[MockFunction]}
            rightArrowIcon={
              <WithStyles(Icon)
                icon="arrow-right"
              />
            }
            value="example-date-val"
          />
        </WithStyles(GridItem)>
        <WithStyles(GridItem)
          className="AddTemplateModalBody-middleOr"
          md={1}
          xs={12}
        >
          <p
            className="AddTemplateModalBody-label"
          >
            OR
          </p>
        </WithStyles(GridItem)>
        <WithStyles(GridItem)
          md={6}
          xs={12}
        >
          <WithStyles(H5)
            className="AddTemplateModalBody-label"
          >
            Which day of the week will the tour start?
          </WithStyles(H5)>
          <WithStyles(ForwardRef(FormControl))
            className="AddTemplateModalBody-selectSpecific"
          >
            <WithStyles(ForwardRef(FormLabel))>
              Day of Week for Tour
            </WithStyles(ForwardRef(FormLabel))>
            <WithStyles(ForwardRef(Select))
              IconComponent="span"
              className="AddTemplateModalBody-selectSpecific"
              disabled={true}
              onChange={[MockFunction]}
              placeholder="Day of Week for Tour"
              value={0}
            >
              <WithStyles(ForwardRef(MenuItem))
                key="0"
                value="1"
              >
                Monday
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                key="1"
                value="2"
              >
                Tuesday
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                key="2"
                value="3"
              >
                Wednesday
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                key="3"
                value="4"
              >
                Thursday
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                key="4"
                value="5"
              >
                Friday
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                key="5"
                value="6"
              >
                Saturday
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                key="6"
                value="0"
              >
                Sunday
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                key="7"
                value="none"
              >
                NA
              </WithStyles(ForwardRef(MenuItem))>
            </WithStyles(ForwardRef(Select))>
            <WithStyles(Button)
              className="AddTemplateModalBody-clearLineBtn"
              onClick={[MockFunction]}
              variant="inline"
            >
              Clear line
            </WithStyles(Button)>
          </WithStyles(ForwardRef(FormControl))>
        </WithStyles(GridItem)>
      </WithStyles(GridContainer)>
    </WithStyles(GridItem)>
  </WithStyles(GridContainer)>
  <br />
  <div
    className="text-danger"
  >
    <i>
      Something
    </i>
  </div>
</Fragment>
`;
